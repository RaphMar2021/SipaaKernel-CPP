KERNEL_ELF = output/kernel-i686.elf
KERNEL_ELF_WIN = output\kernel-i686.elf
OUTPUT_ISO = output/sk-i686.iso
TEMP_ISO = .skb/iso-i686
TEMP_ISO_WIN = .skb\iso-i686
SK_BUILD_UNIX = sk-build/bin/Debug/net7.0/sk-build
SK_BUILD_WIN32 = sk-build/bin/Debug/net7.0/sk-build.exe

all:
	@$(SK_BUILD_UNIX) build-i686

wall:
	@$(SK_BUILD_WIN32) build-i686

config:
	@$(SK_BUILD_UNIX) config

wconfig:
	@$(SK_BUILD_WIN32) config

iso: all
	@rm -rf $(TEMP_ISO)
	@mkdir -p $(TEMP_ISO)
	@cp meta/limine-cfg/wallp.jpg meta/limine/limine-bios.sys meta/limine/limine-bios-cd.bin meta/limine/limine-uefi-cd.bin $(TEMP_ISO)/
	@cp meta/limine-cfg/limine-i686.cfg $(TEMP_ISO)/limine.cfg
	@cp $(KERNEL_ELF) $(TEMP_ISO)/kernel.elf
	@xorriso -as mkisofs -b limine-bios-cd.bin \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		--efi-boot limine-uefi-cd.bin \
		-efi-boot-part --efi-boot-image --protective-msdos-label \
		$(TEMP_ISO) -o $(OUTPUT_ISO)
	@meta/limine/limine bios-install $(OUTPUT_ISO)

wiso: wall
	del $(TEMP_ISO_WIN) /q
	rmdir $(TEMP_ISO_WIN)
	mkdir $(TEMP_ISO_WIN)
	copy meta\limine-cfg\limine-i686.cfg $(TEMP_ISO_WIN)\limine.cfg
	copy meta\limine-cfg\wallp.jpg $(TEMP_ISO_WIN)
	copy meta\limine\limine-bios.sys $(TEMP_ISO_WIN)
	copy meta\limine\limine-bios-cd.bin $(TEMP_ISO_WIN)
	copy meta\limine\limine-uefi-cd.bin $(TEMP_ISO_WIN)
	copy $(KERNEL_ELF_WIN) $(TEMP_ISO_WIN)\kernel.elf
	xorriso -as mkisofs -b limine-bios-cd.bin \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		--efi-boot limine-uefi-cd.bin \
		-efi-boot-part --efi-boot-image --protective-msdos-label \
		$(TEMP_ISO_WIN) -o $(OUTPUT_ISO)
	limine bios-install $(OUTPUT_ISO)

clean:
	$(SK_BUILD_UNIX) clean

wclean:
	$(SK_BUILD_WIN32) clean

run: iso
	qemu-system-x86_64 -m 4g -enable-kvm -serial stdio -cdrom $(OUTPUT_ISO)

debug: iso
	qemu-system-x86_64 -m 4g -enable-kvm -serial stdio -cdrom $(OUTPUT_ISO) -s -S

wrun: wiso
	qemu-system-x86_64 -m 4g -accel whpx -serial stdio -cdrom $(OUTPUT_ISO)

wdebug: wiso
	make wiso
	qemu-system-x86_64 -m 4g -accel whpx -serial stdio -cdrom $(OUTPUT_ISO) -s -S